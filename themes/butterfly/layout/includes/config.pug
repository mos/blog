-
  var algolia = 'undefined';
  var env = process.env;
  if (theme.algolia_search.enable) {
    algolia = JSON.stringify({
      appId: env.ALGOLIA_APP_ID || config.algolia.appId || config.algolia.applicationID,
      apiKey: env.ALGOLIA_API_KEY || config.algolia.apiKey,
      indexName: env.ALGOLIA_INDEX_NAME || config.algolia.indexName,
      hits: theme.algolia_search.hits,
      // search languages
      languages: {
        input_placeholder: _p("algolia_search.input_placeholder"),
        hits_empty: _p("algolia_search.hits_empty"),
        hits_stats: _p("algolia_search.hits_stats")
      }
    })
  } 
  
  var localSearch = 'undefined';
  if (theme.local_search && theme.local_search.enable) {
    localSearch = JSON.stringify({
      path: config.search.path,
      languages: {
        // search languages
        hits_empty: _p("local_search.hits_empty")
      }
    })
  }
  var translate = 'undefined';
  if (theme.translate && theme.translate.enable){
    translate = JSON.stringify({
      defaultEncoding: theme.translate.defaultEncoding,
      translateDelay: theme.translate.translateDelay,
      cookieDomain: theme.translate.cookieDomain,
      msgToTraditionalChinese: theme.translate.msgToTraditionalChinese,
      msgToSimplifiedChinese: theme.translate.msgToSimplifiedChinese
    })
  }

  var copyright = 'undefined' ;
  if (theme.copy.enable && theme.copy.copyright){
    copyright = JSON.stringify({      
      languages: {
      author: _p("copy_copyright.author") + ': ' + config.author,
      link: _p("copy_copyright.link") + ': ' + without_html,
      source: _p("copy_copyright.source") + ': ' + config.title,
      info: _p("copy_copyright.info")
      }
    })
  }

  var copy_copyright_js = theme.copy.enable && theme.copy.copyright;

  var ClickShowText = 'undefined';
  if (theme.ClickShowText && theme.ClickShowText.enable) {
    ClickShowText = JSON.stringify({
    text: theme.ClickShowText.text.join(","),
      fontSize: theme.ClickShowText.fontSize
    })
  }

  
  var Snackbar = 'undefined';
  if (theme.snackbar && theme.snackbar.enable) {
  Snackbar = JSON.stringify({      
    bookmark: {
      title: _p("Snackbar.bookmark.title"),
      message_prev: _p("Snackbar.bookmark.message_prev"),
      message_next: _p("Snackbar.bookmark.message_next")
    },
    chs_to_cht: _p("Snackbar.chs_to_cht"),
    cht_to_chs: _p("Snackbar.cht_to_chs"),
    day_to_night: _p("Snackbar.day_to_night"),
    night_to_day: _p("Snackbar.night_to_day"),
    bgLight: theme.snackbar.bg_light,
    bgDark: theme.snackbar.bg_dark,
    position: theme.snackbar.position,
    })
  }

script.
  var GLOBAL_CONFIG = { 
    root: '!{config.root}',
    algolia: !{algolia},
    localSearch: !{localSearch},
    translate: !{translate},
    highlight_copy: '!{theme.highlight_copy}',
    highlight_lang: '!{theme.highlight_lang}',
    highlight_shrink: '!{theme.highlight_shrink}',
    copy: {
      success: '!{_p("copy.success")}',
      error: '!{_p("copy.error")}',
      noSupport: '!{_p("copy.noSupport")}'
    },
    bookmark: {
      title: '!{_p("Snackbar.bookmark.title")}',
      message_prev: '!{_p("Snackbar.bookmark.message_prev")}',
      message_next: '!{_p("Snackbar.bookmark.message_next")}'
    },
    runtime_unit: '!{_p("runtime_unit")}',
    copyright: !{copyright},
    copy_copyright_js: !{copy_copyright_js},
    ClickShowText: !{ClickShowText},
    medium_zoom: '!{theme.medium_zoom.enable}',
    Snackbar: !{Snackbar}
    
  }

